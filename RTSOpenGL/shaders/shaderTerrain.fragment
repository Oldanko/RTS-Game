#version 430 core

out vec4 outColor;

in vec3 Normal;
in float Height;

vec3 lightDirection = vec3(1.0, 1.0, 1.0);

void main()
{		
	float slope = max(dot(Normal, vec3(0.0, 1.0, 0.0)), 0.0);
	
	float power = max(dot(Normal, normalize(lightDirection)), 0.0);

	vec3 grassland = vec3(70/255.0, 108/255.0, 8/255.0); 
	vec3 rock = vec3(120/255.0, 120/255.0, 120/255.0);
	vec3 bottom = vec3(58/255.0, 37/255.0, 30/255.0);

	vec3 color = grassland;

	float slopeMin = 0.98;
	float slopeMax = 0.95;

	float bottomMin = 1.35;
	float bottomMax = 2.0;


	if(Height < bottomMin)
		color = bottom;
	
	else if(Height < bottomMax)
	{
		float k = (Height - bottomMin)/(bottomMax - bottomMin);
		color = (grassland * k + bottom * (1 - k));
	}
	
	else if(slope < slopeMax)
		color = rock;
	
	else if(slope < slopeMin)
	{
		float k = (slope - slopeMax)/(slopeMin-slopeMax);
		color = (grassland * k + rock * (1 - k));
	}

	outColor = vec4(0.8*power*color + 0.2*color, 1.0f);
	//outColor = vec4(vec3(power), 1.0);
}